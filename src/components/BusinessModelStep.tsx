
import React from "react";
import { useCalculator } from "@/context/CalculatorContext";
import FormField from "@/components/FormField";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { Button } from "@/components/ui/button";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Label } from "@/components/ui/label";

const BusinessModelStep: React.FC = () => {
  const { data, updateData, nextStep, prevStep } = useCalculator();

  return (
    <div className="animate-fade-in transition-all duration-500">
      <Card className="glass-card">
        <CardHeader>
          <CardTitle className="text-2xl font-medium">Business Model</CardTitle>
          <CardDescription>
            Define your revenue model and cost structure
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="space-y-4">
            <h3 className="text-sm font-medium text-foreground">Business Model Type</h3>
            <RadioGroup
              defaultValue={data.businessModel}
              onValueChange={(value) => updateData({ businessModel: value as "subscription" | "one-time" })}
              className="flex space-x-4"
            >
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="subscription" id="subscription" />
                <Label htmlFor="subscription" className="text-sm">Subscription</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="one-time" id="one-time" />
                <Label htmlFor="one-time" className="text-sm">One-time Purchase</Label>
              </div>
            </RadioGroup>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <FormField
              id="revenuePerUser"
              label={data.businessModel === "subscription" ? "Monthly Revenue Per User" : "Revenue Per User"}
              value={data.revenuePerUser}
              onChange={(value) => updateData({ revenuePerUser: value })}
              tooltip="Average revenue generated by each customer."
              prefix="€"
              min={0}
              step={1}
            />
            <FormField
              id="initialInvestment"
              label="Initial Investment"
              value={data.initialInvestment}
              onChange={(value) => updateData({ initialInvestment: value })}
              tooltip="Up-front capital needed to start the business."
              prefix="€"
              min={0}
              step={1000}
            />
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <FormField
              id="fixedCosts"
              label="Monthly Fixed Costs"
              value={data.fixedCosts}
              onChange={(value) => updateData({ fixedCosts: value })}
              tooltip="Regular costs that don't change with sales volume (rent, salaries, etc.)."
              prefix="€"
              min={0}
              step={100}
            />
            <FormField
              id="variableCostsPerUser"
              label="Variable Costs Per User"
              value={data.variableCostsPerUser}
              onChange={(value) => updateData({ variableCostsPerUser: value })}
              tooltip="Costs that vary with each additional user (COGS, shipping, etc.)."
              prefix="€"
              min={0}
              step={0.1}
            />
          </div>

          <FormField
            id="monthlyGrowthRate"
            label="Monthly Growth Rate"
            value={data.monthlyGrowthRate}
            onChange={(value) => updateData({ monthlyGrowthRate: value })}
            tooltip="Expected monthly growth in customer acquisition."
            suffix="%"
            min={0}
            max={100}
            step={0.1}
          />

          <div className="flex justify-between pt-4">
            <Button 
              onClick={prevStep} 
              variant="outline"
              className="group transition-all duration-300"
            >
              <ChevronLeft className="mr-2 h-4 w-4 group-hover:-translate-x-1 transition-transform" />
              Previous
            </Button>
            <Button 
              onClick={nextStep}
              className="group transition-all duration-300"
            >
              Next Step
              <ChevronRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default BusinessModelStep;
